#!/bin/bash
set -e

if [ -z "$1" ]; then
    echo "‚ùå Uso: $0 <arquivo_backup.sql.gz>"
    echo ""
    echo "üìÇ Backups dispon√≠veis:"
    ls -lh ./backups/postgres/postgres_backup_*.sql.gz 2>/dev/null || echo "   Nenhum backup encontrado"
    exit 1
fi

BACKUP_FILE="$1"
CONTAINER_NAME="${POSTGRES_CONTAINER:-friendapp-core-postgres-1}"
DB_NAME="${POSTGRES_DB:-friendapp}"
DB_USER="${POSTGRES_USER:-postgres}"

if [ ! -f "$BACKUP_FILE" ]; then
    echo "‚ùå Erro: Arquivo $BACKUP_FILE n√£o encontrado"
    exit 1
fi

echo "‚ö†Ô∏è  ATEN√á√ÉO: Esta opera√ß√£o ir√° SOBRESCREVER todos os dados do banco!"
echo "üì¶ Container: $CONTAINER_NAME"
echo "üóÑÔ∏è  Database: $DB_NAME"
echo "üìÅ Backup: $BACKUP_FILE"
echo ""
read -p "Continuar? (sim/n√£o): " CONFIRM

if [ "$CONFIRM" != "sim" ]; then
    echo "‚ùå Opera√ß√£o cancelada"
    exit 0
fi

if ! docker ps --format '{{.Names}}' | grep -q "^${CONTAINER_NAME}$"; then
    echo "‚ùå Erro: Container $CONTAINER_NAME n√£o est√° rodando"
    exit 1
fi

echo "üîÑ Iniciando restore do PostgreSQL..."

gunzip -c "$BACKUP_FILE" | docker exec -i "$CONTAINER_NAME" psql -U "$DB_USER" -d "$DB_NAME"

echo "‚úÖ Restore conclu√≠do com sucesso!"
echo "üîç Verificando conex√£o..."

docker exec "$CONTAINER_NAME" psql -U "$DB_USER" -d "$DB_NAME" -c "SELECT COUNT(*) as table_count FROM information_schema.tables WHERE table_schema = 'public';"

echo "‚úÖ Banco de dados restaurado e operacional!"
