#!/bin/bash
set -e

if [ -z "$1" ]; then
    echo "‚ùå Uso: $0 <arquivo_backup.cypher>"
    echo ""
    echo "üìÇ Backups dispon√≠veis:"
    ls -lh ./backups/neo4j/neo4j_backup_*.cypher 2>/dev/null || echo "   Nenhum backup encontrado"
    exit 1
fi

BACKUP_FILE="$1"
CONTAINER_NAME="${NEO4J_CONTAINER:-friendapp-core-neo4j-1}"
NEO4J_USER="${NEO4J_USER:-neo4j}"
NEO4J_PASSWORD="${NEO4J_PASSWORD:-password}"

if [ ! -f "$BACKUP_FILE" ]; then
    echo "‚ùå Erro: Arquivo $BACKUP_FILE n√£o encontrado"
    exit 1
fi

echo "‚ö†Ô∏è  ATEN√á√ÉO: Esta opera√ß√£o ir√° LIMPAR o banco Neo4j atual!"
echo "üì¶ Container: $CONTAINER_NAME"
echo "üìÅ Backup: $BACKUP_FILE"
echo ""
read -p "Continuar? (sim/n√£o): " CONFIRM

if [ "$CONFIRM" != "sim" ]; then
    echo "‚ùå Opera√ß√£o cancelada"
    exit 0
fi

if ! docker ps --format '{{.Names}}' | grep -q "^${CONTAINER_NAME}$"; then
    echo "‚ùå Erro: Container $CONTAINER_NAME n√£o est√° rodando"
    exit 1
fi

echo "üîÑ Limpando banco Neo4j..."
docker exec "$CONTAINER_NAME" cypher-shell -u "$NEO4J_USER" -p "$NEO4J_PASSWORD" \
    "MATCH (n) DETACH DELETE n"

echo "üîÑ Iniciando restore do Neo4j..."

docker exec -i "$CONTAINER_NAME" cypher-shell -u "$NEO4J_USER" -p "$NEO4J_PASSWORD" < "$BACKUP_FILE"

echo "‚úÖ Restore conclu√≠do com sucesso!"
echo "üîç Verificando conex√£o..."

NODE_COUNT=$(docker exec "$CONTAINER_NAME" cypher-shell -u "$NEO4J_USER" -p "$NEO4J_PASSWORD" \
    "MATCH (n) RETURN count(n) as count" | grep -oP '\d+' | head -1)

echo "üìä Total de n√≥s: $NODE_COUNT"
echo "‚úÖ Banco de dados Neo4j restaurado e operacional!"
